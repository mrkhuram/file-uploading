{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Error","class","Success","success","console","log","href","window","location","origin","App","useState","state","setState","error","setError","sucess","setSuccess","uploadFile","e","a","preventDefault","header","headers","formData","FormData","append","axios","post","resp","status","data","for","type","name","onChange","target","files","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAKA,SAASA,IACP,OACE,sBAAKC,MAAM,cAAX,UACE,sDACA,wEAIN,SAASC,EAAT,GAA6B,IAAXC,EAAU,EAAVA,QAEhB,OADAC,QAAQC,IAAIF,GAEV,sBAAKF,MAAM,gBAAX,UACE,4DACA,2CACY,oBAAGK,KAAI,UAAKC,OAAOC,SAASC,OAArB,YAA+BN,GAAtC,wBAAsDI,OAAOC,SAASC,OAAtE,YAAgFN,YAuEnFO,MAjEf,WACE,MAAwBC,oBAAS,GAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAAwBF,oBAAS,GAAjC,mBAAKG,EAAL,KAAYC,EAAZ,KACA,EAA2BJ,oBAAS,GAApC,mBAAKK,EAAL,KAAaC,EAAb,KAKMC,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACjBD,EAAEE,iBACEC,EAAS,CACXC,QAAS,CACP,eAAgB,yBAGdC,EAAW,IAAIC,UACZC,OAAO,OAAQd,GARP,kBAUEe,IAAMC,KAAQ,mBAC7BJ,EACAF,GAZa,OAcI,MAJfO,EAVW,QAcNC,SACPb,EAAWY,EAAKE,MAChBhB,GAAS,IAhBI,kDAmBfA,EAAS,EAAD,IACRE,GAAW,GApBI,0DAAH,sDAwBhB,OACE,sBAAKhB,MAAM,OAAX,UACE,uDAGCa,EAAQ,cAACd,EAAD,CAAOc,MAAOA,IAAW,KAIjCE,EAAS,cAACd,EAAD,CAASC,QAASa,IAAa,KAGzC,sBAAKf,MAAM,OAAX,UACE,sBAAKA,MAAM,oBAAX,UACE,uBAAO+B,IAAI,GAAX,2BACA,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,SA1Cf,SAAChB,GACvBN,EAASM,EAAEiB,OAAOC,MAAM,UA2CpB,wBAAQpC,MAAM,aAAagC,KAAK,SAASK,QAASpB,EAAlD,wBAIA,qBAAKjB,MAAM,YAAX,kDAEF,sBAAKA,MAAM,SAAX,UACE,mBAAGK,KAAK,uBAAuBL,MAAM,mBAArC,qCAGA,qBAAKA,MAAM,YAAX,oCCxEOsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c22ff828.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction Error() {\n  return (\n    <div class=\"error_main \">\n      <h1>Error Uploading File</h1>\n      <p>File failed to upload: please retry.</p>\n    </div>\n  );\n}\nfunction Success({success}) {\n  console.log(success);\n  return (\n    <div class=\"success_main \">\n      <h1>File Uploaded Successfully</h1>\n      <p>\n        File URL: <a href={`${window.location.origin}/${success}`}> {`${window.location.origin}/${success}`}</a>\n      </p>\n    </div>\n  );\n}\n\nfunction App() {\n  let [state, setState] = useState(false);\n  let [error, setError] = useState(false);\n  let [sucess, setSuccess] = useState(false);\n\n  const onChangeHandler = (e) => {\n    setState(e.target.files[0]);\n  };\n  const uploadFile = async (e) => {\n    e.preventDefault();\n    let header = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    const formData = new FormData();\n    formData.append(\"file\", state);\n    try {\n      let resp = await axios.post(\"\"+\"/api/create_file\",\n        formData,\n        header\n      );\n      if (resp.status == 200) {\n        setSuccess(resp.data);\n        setError(false)\n      }\n    } catch (err) {\n      setError(err)\n      setSuccess(false)\n    }\n  };\n\n  return (\n    <div class=\"main\">\n      <h1>File Uploading system</h1>\n\n      {/* <!-- Error Box Start--> */}\n      {error ? <Error error={error}/> : null}\n      {/* <!-- Error Box End  --> */}\n\n      {/* <!-- Success Box Start--> */}\n      {sucess ? <Success success={sucess} /> : null}\n      {/* <!-- Success Box End  --> */}\n\n      <div class=\"form\">\n        <div class=\"select_file_outer\">\n          <label for=\"\">Select file: </label>\n          <input type=\"file\" name=\"file\" onChange={onChangeHandler} />\n        </div>\n        <button class=\"upload_btn\" type=\"submit\" onClick={uploadFile}>\n          Upload Now\n        </button>\n\n        <div class=\"desc_line\">Any type of files are acceptable.</div>\n      </div>\n      <div class=\"footer\">\n        <a href=\"mailto:admin@url.com\" class=\"req_file_removal\">\n          Request a file removal.\n        </a>\n        <div class=\"copyright\">Â© 2021 is.am</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}